plugins {
    id 'java-library'
    // id 'com.google.protobuf' version '0.9.4'
    // id 'com.vanniktech.maven.publish' version '0.18.0'
}

apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral() // Use Maven Central for dependencies
    google() // Add the Google repository if needed
    maven { url "https://plugins.gradle.org/m2/" } // Add Gradle Plugin Portal
}

dependencies {
    // You need to depend on the lite runtime library, not protobuf-java
    api 'com.google.protobuf:protobuf-javalite:4.27.2'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                    outputSubDir = 'java'
                }
                python {
                    // Change this to the correct relative path
                    outputSubDir = '../python/src/gabriel_protocol'
                }
            }
        }
    }

    // Change this to a more appropriate base directory
    generatedFilesBaseDir = "$projectDir/src/generated"
}

// Add this task to copy the generated Python files to the correct location
task copyGeneratedPython(type: Copy) {
    from "${buildDir}/generated/source/proto/main/python"
    into "${projectDir}/../python/src/gabriel_protocol"
    include '**/*.py'
}

// Make sure copyGeneratedPython runs after proto generation
afterEvaluate {
    tasks.findByName('generateProto').finalizedBy(copyGeneratedPython)
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir '../protos'
        }
    }
}


